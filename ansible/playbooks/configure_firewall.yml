---
- name: Configure Firewall and Base Application Setup
  hosts: microservice
  become: yes
  gather_facts: no
  vars_files:
    - ../group_vars/all.yml

  vars:
    app_base_dir: /opt/jumia_app
    app_source_dir: "{{ app_base_dir }}/source"
    app_deploy_dir: "{{ app_base_dir }}/deploy"
    git_repo_url: "https://github.com/Jumia/DevOps-Challenge.git"
    git_branch: main
    ubuntu_release_codename: jammy

  tasks:
    - name: Install prerequisite packages
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release', 'python3-pip', 'git']
        state: present
        update_cache: yes

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_release_codename }} stable"
        state: present
        filename: docker

    - name: Install Docker Engine, CLI, and Compose Plugin
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose-plugin']
        state: present
        update_cache: yes

    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Ensure base application directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ app_base_dir }}"
        - "{{ app_source_dir }}"
        - "{{ app_deploy_dir }}"

    - name: Checkout application source code from Git
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ app_source_dir }}"
        version: "{{ git_branch }}"
        force: yes
      environment:
        GIT_TERMINAL_PROMPT: '0'

    - name: Template docker-compose.yml file into deployment directory
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ app_deploy_dir }}/docker-compose.yml"
        mode: '0644'

    - name: Deploy containers using docker compose v2
      community.docker.docker_compose_v2:
        project_src: "{{ app_deploy_dir }}"
        state: present
        remove_orphans: yes
